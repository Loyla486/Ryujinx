version: 1.0.{build}
branches:
  only:
  - master
image:
  - Visual Studio 2019
  - Ubuntu
environment:
  appveyor_dotnet_runtime: netcoreapp3.1
  matrix:
    - config: Release
      config_name: '-'

build_script:
- ps: >-
    dotnet --version
    
    dotnet publish -c $env:config -r win-x64 /p:Version=$env:APPVEYOR_BUILD_VERSION
    
    dotnet publish -c $env:config -r linux-x64 /p:Version=$env:APPVEYOR_BUILD_VERSION
    
    dotnet publish -c $env:config -r osx-x64 /p:Version=$env:APPVEYOR_BUILD_VERSION
    
    7z a ryujinx$env:config_name$env:APPVEYOR_BUILD_VERSION-win_x64.zip $env:APPVEYOR_BUILD_FOLDER\Ryujinx\bin\$env:config\$env:appveyor_dotnet_runtime\win-x64\publish\
    
    7z a ryujinx$env:config_name$env:APPVEYOR_BUILD_VERSION-linux_x64.tar $env:APPVEYOR_BUILD_FOLDER\Ryujinx\bin\$env:config\$env:appveyor_dotnet_runtime\linux-x64\publish\
    
    7z a ryujinx$env:config_name$env:APPVEYOR_BUILD_VERSION-linux_x64.tar.gz ryujinx$env:config_name$env:APPVEYOR_BUILD_VERSION-linux_x64.tar
    
    7z a ryujinx$env:config_name$env:APPVEYOR_BUILD_VERSION-osx_x64.zip $env:APPVEYOR_BUILD_FOLDER\Ryujinx\bin\$env:config\$env:appveyor_dotnet_runtime\osx-x64\publish\
    
for:
-
  matrix:
    only:
      - image: Ubuntu
  build_script:
    - |-
      dotnet publish -c $config -r linux-x64 /p:Version=$APPVEYOR_BUILD_VERSION
      
      mkdir -p AppDir/usr/bin ;
      cp Ryujinx/bin/Release/netcoreapp3.1/linux-x64/publish/* AppDir/usr/bin/ ;
      cp Ryujinx/Ui/assets/Icon.png AppDir/Ryujinx.png ;
      cp Ryujinx/Ui/assets/Ryujinx.desktop AppDir/Ryujinx.desktop ;
      curl -sL https://github.com/AppImage/AppImageKit/releases/download/continuous/AppRun-x86_64 -o AppDir/AppRun1 ;
      curl -sL https://github.com/AppImage/AppImageKit/releases/download/continuous/runtime-x86_64 -o ./AppDir/runtime ;
      mkdir -p AppDir/usr/share/applications && cp ./AppDir/Ryujinx.desktop ./AppDir/usr/share/applications ;
      mkdir -p AppDir/usr/share/icons && cp ./AppDir/Ryujinx.png ./AppDir/usr/share/icons ;
      mkdir -p AppDir/usr/share/icons/hicolor/scalable/apps && cp ./AppDir/Ryujinx.png ./AppDir/usr/share/icons/hicolor/scalable/apps ;
      mkdir -p AppDir/usr/share/pixmaps && cp ./AppDir/Ryujinx.png ./AppDir/usr/share/pixmaps ;
      
      # Logging Work Around
      cp Ryujinx/Config.json ./AppDir/usr/share/ ;
      sed -i -e 's#"enable_file_log": true,#"enable_file_log": false,#g' ./AppDir/usr/share/Config.json ;      
      cat << 'EOF' > ./AppDir/AppRun 
      #!/bin/bash
      #
      cp $APPDIR/usr/share/Config.json $XDG_CONFIG_HOME/Ryujinx
      $APPDIR/AppRun1
      EOF
      
      chmod a+x ./AppDir/AppRun ;
      chmod a+x ./AppDir/AppRun1 ;
      chmod a+x ./AppDir/runtime ;
      chmod a+x ./AppDir/usr/bin/Ryujinx ;
      curl -sLO "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage" ;
      chmod a+x appimagetool-x86_64.AppImage ;
      ./appimagetool-x86_64.AppImage AppDir/ ;
      mv Ryujinx-x86_64.AppImage ryujinx$config_name$APPVEYOR_BUILD_VERSION-linux_x64.AppImage 
    
artifacts:
- path: ryujinx%config_name%%APPVEYOR_BUILD_VERSION%-win_x64.zip
- path: ryujinx%config_name%%APPVEYOR_BUILD_VERSION%-linux_x64.tar.gz
- path: ryujinx%config_name%%APPVEYOR_BUILD_VERSION%-osx_x64.zip
- path: ryujinx$config_name$APPVEYOR_BUILD_VERSION-linux_x64.AppImage
